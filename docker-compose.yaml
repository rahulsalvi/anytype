---
name: anytype
services:
  tailscale:
    image: ghcr.io/tailscale/tailscale:latest
    environment:
      - TS_AUTHKEY=file:/run/secrets/ts_authkey
      - TS_HOSTNAME=anytype
      - TS_USERSPACE=false
    volumes:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    secrets:
      - ts_authkey
    restart: unless-stopped

  mongo:
    image: mongo:latest
    command: ["--replSet", "rs0"]
    volumes:
      - mongo_db_data:/data/db
      - mongo_configdb_data:/data/configdb
    restart: unless-stopped
    healthcheck:
      test: test $$(mongosh --quiet --eval "try {rs.initiate({_id:'rs0',members:[{_id:0,host:\"mongo:27017\"}]})} catch(e) {rs.status().ok}") -eq 1
      interval: 10s
      start_period: 30s

  redis:
    image: redis/redis-stack-server:latest
    environment:
      - REDIS_ARGS=--appendonly yes --maxmemory 256mb --maxmemory-policy noeviction --protected-mode no
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 30s
      retries: 3

  minio:
    image: minio/minio:latest
    command: ["server", "/data"]
    environment:
      - MINIO_ROOT_USER_FILE=/run/secrets/minio_user
      - MINIO_ROOT_PASSWORD_FILE=/run/secrets/minio_password
    volumes:
      - minio_data:/data
    secrets:
      - minio_user
      - minio_password
    restart: unless-stopped
    healthcheck:
      test: bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 5s
      timeout: 10s
      retries: 3

  any-sync-coordinator-bootstrap:
    image: ghcr.io/anyproto/any-sync-coordinator:v0.3.28
    command: ["/bin/any-sync-confapply", "-c", "/etc/any-sync-coordinator/config.yml", "-n", "/etc/any-sync-coordinator/network.yml", "-e"]
    depends_on:
      tailscale:
        condition: service_started
      mongo:
        condition: service_healthy
    volumes:
      - ./etc/any-sync-coordinator:/etc/any-sync-coordinator
    network_mode: service:tailscale
    restart: no

  any-sync-coordinator:
    image: ghcr.io/anyproto/any-sync-coordinator:v0.3.28
    depends_on:
      tailscale:
        condition: service_started
      mongo:
        condition: service_healthy
      any-sync-coordinator-bootstrap:
        condition: service_completed_successfully
    volumes:
      - ./etc/any-sync-coordinator:/etc/any-sync-coordinator
      - coordinator_network_store:/networkStore
    deploy:
      resources:
        limits:
          memory: 500M
    network_mode: service:tailscale
    restart: unless-stopped

  any-sync-filenode:
    image: ghcr.io/anyproto/any-sync-filenode:v0.7.2
    depends_on:
      tailscale:
        condition: service_started
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      any-sync-coordinator:
        condition: service_started
    volumes:
      - ./etc/any-sync-filenode:/etc/any-sync-filenode
      - filenode_network_store:/networkStore
      - ./aws:/root/.aws:ro
    deploy:
      resources:
        limits:
          memory: 500M
    network_mode: service:tailscale
    restart: unless-stopped

  any-sync-node-1:
    image: ghcr.io/anyproto/any-sync-node:v0.3.34
    depends_on:
      tailscale:
        condition: service_started
      any-sync-coordinator:
        condition: service_started
    volumes:
      - ./etc/any-sync-node-1:/etc/any-sync-node
      - syncnode_1_sync_store:/storage
      - syncnode_1_network_store:/networkStore
    deploy:
      resources:
        limits:
          memory: 500M
    network_mode: service:tailscale
    restart: unless-stopped

  any-sync-node-2:
    image: ghcr.io/anyproto/any-sync-node:v0.3.34
    depends_on:
      tailscale:
        condition: service_started
      any-sync-coordinator:
        condition: service_started
    volumes:
      - ./etc/any-sync-node-2:/etc/any-sync-node
      - syncnode_2_sync_store:/storage
      - syncnode_2_network_store:/networkStore
    deploy:
      resources:
        limits:
          memory: 500M
    network_mode: service:tailscale
    restart: unless-stopped

  any-sync-node-3:
    image: ghcr.io/anyproto/any-sync-node:v0.3.34
    depends_on:
      tailscale:
        condition: service_started
      any-sync-coordinator:
        condition: service_started
    volumes:
      - ./etc/any-sync-node-3:/etc/any-sync-node
      - syncnode_3_sync_store:/storage
      - syncnode_3_network_store:/networkStore
    deploy:
      resources:
        limits:
          memory: 500M
    network_mode: service:tailscale
    restart: unless-stopped

  any-sync-consensusnode:
    image: ghcr.io/anyproto/any-sync-consensusnode:v0.1.7
    depends_on:
      tailscale:
        condition: service_started
      mongo:
        condition: service_healthy
      any-sync-coordinator:
        condition: service_started
    volumes:
      - ./etc/any-sync-consensusnode:/etc/any-sync-consensusnode
      - consensusnode_network_store:/networkStore
    deploy:
      resources:
        limits:
          memory: 500M
    network_mode: service:tailscale
    restart: unless-stopped

secrets:
  ts_authkey:
    environment: "TS_AUTHKEY"
  minio_user:
    environment: "MINIO_USER"
  minio_password:
    environment: "MINIO_PASSWORD"

volumes:
  mongo_db_data:
  mongo_configdb_data:
  redis_data:
  minio_data:
  coordinator_network_store:
  filenode_network_store:
  consensusnode_network_store:
  syncnode_1_network_store:
  syncnode_2_network_store:
  syncnode_3_network_store:
  syncnode_1_sync_store:
  syncnode_2_sync_store:
  syncnode_3_sync_store:

networks:
  default:
    enable_ipv6: true
